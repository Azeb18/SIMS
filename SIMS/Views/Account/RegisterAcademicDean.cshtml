@model SIMS.Models.RegisterAcademicDeanViewModel

@{
    ViewBag.Title = "Register Academic Dean";
}

<h2>Create Academic Dean Account</h2>

@using (Html.BeginForm("RegisterAcademicDean", "Account")) 
{
    @Html.AntiForgeryToken()

    <div class="">
        <h4>Register a new Academic Dean.</h4>
        <hr />

        @if (TempData.ContainsKey("NewId"))
        {
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <p><b>Academic Dean account created!</b> The new Id is <b>@TempData["NewId"]</b> and the password is <b>@TempData["NewPassword"]</b></p>
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "text-danger list-group" })

        <div class="row">
            <div class="col-sm-12">
                <h5>Personal Information</h5>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.FirstName)
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.MiddleName)
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.LastName)
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Sex)
                <select class="form-control" name="@Html.NameFor(m=>m.Sex)">
                    <option value="M">Male</option>
                    <option value="F">Female</option>
                </select>                
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.DateOfBirth)
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" , type="date" } })
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <h5>Address</h5>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Region)
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Town)
                @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.SubCity)
                @Html.EditorFor(model => model.SubCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SubCity, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Woreda)
                @Html.EditorFor(model => model.Woreda, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Woreda, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.HouseNumber)
                @Html.EditorFor(model => model.HouseNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HouseNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-sm-12">
                <h5>Contact Information</h5>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.Email)
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-sm-4">
                @Html.LabelFor(model => model.PhoneNumber)
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" , type="tel"} })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <button class="btn btn-default" type="reset">Reset</button>
            <button class="btn btn-success" type="submit">Create New Academic Dean Account</button>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}